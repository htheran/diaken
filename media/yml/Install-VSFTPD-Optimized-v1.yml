---
- name: Instalación y configuración de VSFTPD para hosts
  hosts: target_host
  become: yes
  tasks:
    # Fase 0: Validación de variables
    - name: Validar variables requeridas
      debug:
        msg: "Validando variables para el host: {{ target_host }}"
      tags:
        - always

    - name: Verificar si existen variables de configuración
      debug:
        msg: "Variables de configuración disponibles: {{ vars | to_json }}"
      tags:
        - debug
        - never

    - name: Establecer variables por defecto si no están definidas
      set_fact:
        server_root: "{{ server_root | default('/opt/www/sites') }}"
        ftp_user: "{{ ftp_user | default('ftpuser') }}"
        ftp_password: "{{ ftp_password | default('changeme') }}"
        ftp_port: "{{ ftp_port | default(21) }}"
        pasv_min_port: "{{ pasv_min_port | default(30000) }}"
        pasv_max_port: "{{ pasv_max_port | default(31000) }}"
        apache_group: "{{ apache_group | default('apache') }}"
      tags:
        - always

    # Fase 1: Verificación previa y diagnóstico
    - name: Verificar si Apache está instalado
      command: which httpd
      register: httpd_installed
      ignore_errors: yes
      changed_when: false
      tags:
        - diagnose

    - name: Mostrar advertencia si Apache no está instalado
      debug:
        msg: "ADVERTENCIA: Apache no está instalado. Se recomienda instalar Apache primero usando el playbook Install HTTPD Host (Optimized v2)."
      when: httpd_installed.rc != 0
      tags:
        - diagnose

    - name: Verificar si VSFTPD está instalado
      command: which vsftpd
      register: vsftpd_installed
      ignore_errors: yes
      changed_when: false
      tags:
        - diagnose

    # Fase 2: Actualización e instalación
    - name: Actualizar sistema operativo
      dnf:
        name: '*'
        state: latest
        update_cache: yes
      register: result_update
      ignore_errors: yes
      tags:
        - install

    - name: Instalar VSFTPD
      dnf:
        name: vsftpd
        state: present
      register: vsftpd_install
      tags:
        - install

    # Fase 3: Configuración de firewall
    - name: Asegurar que el servicio firewalld esté iniciado y habilitado
      service:
        name: firewalld
        state: started
        enabled: yes
      ignore_errors: yes
      tags:
        - firewall

    - name: Abrir puerto FTP permanentemente en el firewall
      shell: firewall-cmd --permanent --add-port={{ ftp_port }}/tcp
      ignore_errors: yes
      tags:
        - firewall

    - name: Abrir puertos pasivos FTP en el firewall
      shell: firewall-cmd --permanent --add-port={{ pasv_min_port }}-{{ pasv_max_port }}/tcp
      ignore_errors: yes
      tags:
        - firewall

    - name: Recargar firewalld
      shell: firewall-cmd --reload
      ignore_errors: yes
      tags:
        - firewall

    # Fase 4: Configuración de SELinux
    - name: Configurar SELinux para permitir FTP
      shell: |
        setsebool -P ftpd_full_access on
        setsebool -P httpd_can_network_connect on
        setsebool -P allow_ftpd_full_access on
      ignore_errors: yes
      tags:
        - selinux

    # Fase 5: Crear usuario FTP y configurar permisos
    - name: Verificar si el grupo apache existe
      shell: getent group {{ apache_group }}
      register: apache_group_exists
      ignore_errors: yes
      changed_when: false
      tags:
        - user

    - name: Crear usuario FTP
      user:
        name: "{{ ftp_user }}"
        password: "{{ ftp_password | password_hash('sha512') }}"
        groups: "{{ apache_group }}"
        append: yes
        shell: /bin/bash
        home: "{{ server_root }}/{{ target_host }}"
        create_home: no
      when: apache_group_exists.rc == 0
      tags:
        - user

    - name: Crear directorio para el usuario FTP si no existe
      file:
        path: "{{ server_root }}/{{ target_host }}"
        state: directory
        owner: "{{ ftp_user }}"
        group: "{{ apache_group }}"
        mode: '0750'
      tags:
        - user

    - name: Establecer permisos recursivos en el directorio del sitio
      shell: |
        find {{ server_root }}/{{ target_host }} -type d -exec chmod 750 {} \;
        find {{ server_root }}/{{ target_host }} -type f -exec chmod 640 {} \;
        chown -R {{ ftp_user }}:{{ apache_group }} {{ server_root }}/{{ target_host }}
      ignore_errors: yes
      tags:
        - user

    # Fase 6: Configurar VSFTPD
    - name: Hacer backup del archivo vsftpd.conf si existe
      copy:
        src: /etc/vsftpd/vsftpd.conf
        dest: /etc/vsftpd/vsftpd.conf.bak.{{ ansible_date_time.date }}
        remote_src: yes
      ignore_errors: yes
      tags:
        - configure

    - name: Configurar VSFTPD
      copy:
        content: |
          # Configuración de VSFTPD generada por Install-VSFTPD-Optimized-v1.yml
          # Configuración básica
          listen=YES
          listen_port={{ ftp_port }}
          anonymous_enable=NO
          local_enable=YES
          write_enable=YES
          local_umask=022
          dirmessage_enable=YES
          use_localtime=YES
          xferlog_enable=YES
          connect_from_port_20=YES
          xferlog_std_format=YES
          chroot_local_user=YES
          allow_writeable_chroot=YES
          hide_ids=YES
          
          # Configuración de puertos pasivos
          pasv_enable=YES
          pasv_min_port={{ pasv_min_port }}
          pasv_max_port={{ pasv_max_port }}
          
          # Configuración de seguridad
          ssl_enable=YES
          allow_anon_ssl=NO
          force_local_data_ssl=YES
          force_local_logins_ssl=YES
          ssl_tlsv1=YES
          ssl_sslv2=NO
          ssl_sslv3=NO
          require_ssl_reuse=NO
          ssl_ciphers=HIGH
          
          # Configuración de usuarios
          userlist_enable=YES
          userlist_deny=NO
          userlist_file=/etc/vsftpd/vsftpd.users
          
          # Configuración de logs
          dual_log_enable=YES
          log_ftp_protocol=YES
          vsftpd_log_file=/var/log/vsftpd.log
          
          # Configuración de timeout
          idle_session_timeout=600
          data_connection_timeout=120
          
          # Configuración de banner
          ftpd_banner=Bienvenido al servidor FTP de {{ target_host }}
        dest: /etc/vsftpd/vsftpd.conf
        mode: '0600'
      tags:
        - configure

    - name: Crear archivo de usuarios permitidos
      copy:
        content: "{{ ftp_user }}"
        dest: /etc/vsftpd/vsftpd.users
        mode: '0600'
      tags:
        - configure

    - name: Generar certificado SSL para VSFTPD si no existe
      shell: |
        if [ ! -f /etc/vsftpd/vsftpd.pem ]; then
          openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
            -keyout /etc/vsftpd/vsftpd.pem -out /etc/vsftpd/vsftpd.pem \
            -subj "/C=CO/ST=Santander/L=Bucaramanga/O={{ target_host }}/CN={{ target_host }}.{{ domain | default('upb.edu.co') }}"
          chmod 600 /etc/vsftpd/vsftpd.pem
        fi
      args:
        creates: /etc/vsftpd/vsftpd.pem
      tags:
        - configure

    # Fase 7: Verificar y reiniciar VSFTPD
    - name: Verificar configuración de VSFTPD
      shell: vsftpd -olisten=NO /etc/vsftpd/vsftpd.conf
      register: vsftpd_config_test
      ignore_errors: yes
      changed_when: false
      tags:
        - service

    - name: Mostrar errores de configuración si existen
      debug:
        msg: "{{ vsftpd_config_test.stderr_lines }}"
      when: vsftpd_config_test.rc != 0
      tags:
        - service

    - name: Reiniciar VSFTPD si la configuración es válida
      service:
        name: vsftpd
        state: restarted
        enabled: yes
      when: vsftpd_config_test.rc == 0
      tags:
        - service

    - name: Mostrar advertencia si la configuración no es válida
      debug:
        msg: "ADVERTENCIA: La configuración de VSFTPD tiene errores y no se pudo reiniciar el servicio."
      when: vsftpd_config_test.rc != 0
      tags:
        - service

    # Fase 8: Actualizar index.html con información de FTP
    - name: Verificar si existe el archivo index.html
      stat:
        path: "{{ server_root }}/{{ target_host }}/index.html"
      register: index_stat
      tags:
        - index

    - name: Crear copia de seguridad del index.html si existe
      copy:
        src: "{{ server_root }}/{{ target_host }}/index.html"
        dest: "{{ server_root }}/{{ target_host }}/index.html.bak.{{ ansible_date_time.date }}"
        remote_src: yes
      when: index_stat.stat.exists
      tags:
        - index

    - name: Actualizar index.html con información de FTP
      block:
        - name: Leer contenido del archivo index.html
          slurp:
            src: "{{ server_root }}/{{ target_host }}/index.html"
          register: index_content
          when: index_stat.stat.exists

        - name: Actualizar index.html con badge de FTP
          copy:
            content: "{{ index_content['content'] | b64decode | regex_replace('<div class=\"success-badge\">[\\s\\S]*?</div>', '<div class=\"success-badge\">\n            <i class=\"bi bi-check-circle-fill\"></i>\n            Deployment Successful\n        </div>\n        <div class=\"success-badge\" style=\"background: rgba(16, 185, 129, 0.12); color: var(--accent-green);\">\n            <i class=\"bi bi-shield-check\"></i>\n            FTP Configured\n        </div>') | regex_replace('<div class=\"info-value\">.*?</div>', '<div class=\"info-value\">' + ansible_date_time.date + ' ' + ansible_date_time.time + '</div>') }}"
            dest: "{{ server_root }}/{{ target_host }}/index.html"
          when: index_stat.stat.exists
      when: index_stat.stat.exists
      ignore_errors: yes
      tags:
        - index

    # Fase 9: Resumen final
    - name: Mensaje de confirmación
      debug:
        msg: |
          Instalación y configuración de VSFTPD completada:
          - Host: {{ target_host }}
          - Puerto FTP: {{ ftp_port }}
          - Puertos pasivos: {{ pasv_min_port }} - {{ pasv_max_port }}
          - Usuario FTP: {{ ftp_user }}
          - Directorio raíz: {{ server_root }}/{{ target_host }}
          - Estado de la configuración: {{ 'Válida' if vsftpd_config_test.rc == 0 else 'Con errores' }}
          - Index.html actualizado: {{ 'Sí' if index_stat.stat.exists else 'No (no existe el archivo)' }}
          
          IMPORTANTE: Por razones de seguridad, se recomienda cambiar la contraseña del usuario FTP después de la instalación.
      tags:
        - always
