---
- name: Instalar y configurar ProFTPD de forma segura
  hosts: target_host
  become: yes
  tasks:
    # Fase 0: Validación de variables
    - name: Validar variables requeridas
      debug:
        msg: "Validando variables para el host: {{ target_host }}"
      tags:
        - always

    - name: Establecer variables por defecto si no están definidas
      set_fact:
        server_root: "{{ server_root | default('/opt/www/sites') }}"
        ftp_user: "{{ ftp_user | default('ftpuser') }}"
        ftp_password: "{{ ftp_password | default('changeme') }}"
        ftp_port: "{{ ftp_port | default(21) }}"
        pasv_min_port: "{{ pasv_min_port | default(30000) }}"
        pasv_max_port: "{{ pasv_max_port | default(31000) }}"
        apache_group: "{{ apache_group | default('apache') }}"
      tags:
        - always

    # Fase 1: Limpieza de instalaciones anteriores
    - name: Detener y eliminar VSFTPD si existe
      block:
        - name: Detener servicio VSFTPD
          service:
            name: vsftpd
            state: stopped
            enabled: no
          ignore_errors: yes
          
        - name: Eliminar paquete VSFTPD
          package:
            name: vsftpd
            state: absent
      ignore_errors: yes
      tags:
        - cleanup

    # Fase 2: Instalación de ProFTPD
    - name: Instalar paquetes necesarios
      package:
        name:
          - proftpd
          - proftpd-utils
          - openssl
        state: present
      tags:
        - install

    # Fase 3: Configuración de usuarios
    - name: Verificar si el usuario FTP existe
      getent:
        database: passwd
        key: "{{ ftp_user }}"
      register: ftp_user_exists
      ignore_errors: yes
      tags:
        - users

    - name: Crear usuario FTP si no existe
      user:
        name: "{{ ftp_user }}"
        password: "{{ ftp_password | password_hash('sha512') }}"
        groups: "{{ apache_group }}"
        append: yes
        shell: /sbin/nologin
        home: "{{ server_root }}/{{ target_host }}"
        create_home: no
      when: ftp_user_exists.failed is defined and ftp_user_exists.failed
      tags:
        - users

    # Fase 4: Configuración de directorios
    - name: Verificar directorio del usuario FTP
      stat:
        path: "{{ server_root }}/{{ target_host }}"
      register: ftp_dir_stat
      tags:
        - directories

    - name: Crear directorio para el usuario FTP si no existe
      file:
        path: "{{ server_root }}/{{ target_host }}"
        state: directory
        owner: "{{ ftp_user }}"
        group: "{{ apache_group }}"
        mode: '0755'
      when: not ftp_dir_stat.stat.exists
      tags:
        - directories

    - name: Establecer permisos correctos en el directorio
      shell: |
        chown -R {{ ftp_user }}:{{ apache_group }} {{ server_root }}/{{ target_host }}
        chmod -R 755 {{ server_root }}/{{ target_host }}
        find {{ server_root }}/{{ target_host }} -type f -exec chmod 644 {} \;
      ignore_errors: yes
      tags:
        - directories

    # Fase 5: Configuración de SSL
    - name: Crear directorio para certificados SSL
      file:
        path: /etc/proftpd/ssl
        state: directory
        mode: '0700'
      tags:
        - ssl

    - name: Generar certificado SSL autofirmado
      shell: |
        openssl req -x509 -nodes -days 3650 -newkey rsa:2048 \
        -keyout /etc/proftpd/ssl/proftpd.key \
        -out /etc/proftpd/ssl/proftpd.cert \
        -subj "/C=ES/ST=Madrid/L=Madrid/O=Diaken/OU=IT/CN={{ target_host }}"
      args:
        creates: /etc/proftpd/ssl/proftpd.cert
      tags:
        - ssl

    - name: Establecer permisos correctos para certificados
      file:
        path: "{{ item }}"
        mode: '0600'
      with_items:
        - /etc/proftpd/ssl/proftpd.key
        - /etc/proftpd/ssl/proftpd.cert
      tags:
        - ssl

    # Fase 6: Configuración de ProFTPD
    - name: Hacer backup de la configuración original
      copy:
        src: /etc/proftpd/proftpd.conf
        dest: /etc/proftpd/proftpd.conf.bak
        remote_src: yes
      ignore_errors: yes
      tags:
        - configure

    - name: Crear configuración principal de ProFTPD
      copy:
        content: |
          # Configuración principal de ProFTPD generada por Install-ProFTPD-Secure.yml
          
          # Configuración básica del servidor
          ServerName                      "FTP Server {{ target_host }}"
          ServerType                      standalone
          DefaultServer                   on
          Port                            {{ ftp_port }}
          Umask                           022
          MaxInstances                    30
          
          # Configuración de usuarios
          User                            nobody
          Group                           nobody
          RequireValidShell               off
          
          # Configuración de directorios
          DefaultRoot                     ~ !adm
          AllowOverwrite                  on
          
          # Configuración de logs
          SystemLog                       /var/log/proftpd/proftpd.log
          TransferLog                     /var/log/proftpd/xferlog
          
          # Configuración de tiempos
          TimeoutIdle                     600
          TimeoutLogin                    120
          TimeoutNoTransfer               600
          TimeoutStalled                  600
          
          # Configuración de mensajes
          ServerIdent                     on "FTP Server Ready"
          
          # Configuración de seguridad
          IdentLookups                    off
          UseReverseDNS                   off
          
          # Configuración de modo pasivo
          PassivePorts                    {{ pasv_min_port }} {{ pasv_max_port }}
          
          # Módulos
          LoadModule mod_tls.c
          
          # Configuración de TLS/SSL
          <IfModule mod_tls.c>
            TLSEngine                     on
            TLSLog                        /var/log/proftpd/tls.log
            TLSProtocol                   TLSv1.2
            TLSRSACertificateFile         /etc/proftpd/ssl/proftpd.cert
            TLSRSACertificateKeyFile      /etc/proftpd/ssl/proftpd.key
            TLSOptions                    NoSessionReuseRequired
            TLSVerifyClient               off
            TLSRequired                   off
          </IfModule>
          
          # Configuración de autenticación
          AuthOrder                       mod_auth_pam.c mod_auth_unix.c
          
          # Configuración específica del directorio raíz
          <Directory {{ server_root }}/{{ target_host }}>
            Umask                         022
            AllowOverwrite                on
            <Limit ALL>
              AllowUser                   {{ ftp_user }}
              DenyAll
            </Limit>
          </Directory>
        dest: /etc/proftpd/proftpd.conf
        mode: '0644'
      tags:
        - configure

    # Fase 7: Configuración de firewall (usando comandos directos)
    - name: Verificar si firewalld está instalado
      command: which firewall-cmd
      register: firewalld_check
      ignore_errors: yes
      changed_when: false
      tags:
        - firewall

    - name: Permitir servicio FTP en firewall
      command: firewall-cmd --permanent --add-service=ftp
      when: firewalld_check.rc == 0
      ignore_errors: yes
      changed_when: true
      tags:
        - firewall

    - name: Permitir puertos pasivos en firewall
      shell: firewall-cmd --permanent --add-port={{ pasv_min_port }}-{{ pasv_max_port }}/tcp
      when: firewalld_check.rc == 0
      ignore_errors: yes
      changed_when: true
      tags:
        - firewall

    - name: Recargar firewall
      command: firewall-cmd --reload
      when: firewalld_check.rc == 0
      ignore_errors: yes
      changed_when: true
      tags:
        - firewall

    # Fase 8: Iniciar servicio
    - name: Habilitar e iniciar servicio ProFTPD
      service:
        name: proftpd
        state: started
        enabled: yes
      register: proftpd_service
      tags:
        - service

    # Fase 9: Verificación
    - name: Verificar estado del servicio
      command: systemctl status proftpd
      register: proftpd_status
      ignore_errors: yes
      changed_when: false
      tags:
        - verify

    - name: Mostrar estado del servicio
      debug:
        msg: "{{ proftpd_status.stdout_lines }}"
      tags:
        - verify

    # Fase 10: Actualizar index.html
    - name: Verificar si existe index.html
      stat:
        path: "{{ server_root }}/{{ target_host }}/index.html"
      register: index_exists
      tags:
        - index

    - name: Actualizar index.html con estado de FTP
      block:
        - name: Leer contenido actual de index.html
          slurp:
            src: "{{ server_root }}/{{ target_host }}/index.html"
          register: index_content
          when: index_exists.stat.exists
          
        - name: Decodificar contenido
          set_fact:
            decoded_content: "{{ index_content['content'] | b64decode }}"
          when: index_exists.stat.exists
          
        - name: Verificar si ya existe badge de FTP
          set_fact:
            has_ftp_badge: "{{ decoded_content | regex_search('FTP Status') != None }}"
          when: index_exists.stat.exists
          
        - name: Añadir badge de FTP si no existe
          replace:
            path: "{{ server_root }}/{{ target_host }}/index.html"
            regexp: '(<div class="container mt-5">.*?<h1>)'
            replace: '\1<div class="alert alert-success mb-4"><strong>FTP Status:</strong> ProFTPD Configured and Running ({{ ansible_date_time.date }})</div>'
          when: index_exists.stat.exists and (has_ftp_badge is not defined or not has_ftp_badge)
          
        - name: Actualizar badge de FTP si ya existe
          replace:
            path: "{{ server_root }}/{{ target_host }}/index.html"
            regexp: '<div class="alert alert-(success|warning|danger) mb-4"><strong>FTP Status:</strong>.*?</div>'
            replace: '<div class="alert alert-success mb-4"><strong>FTP Status:</strong> ProFTPD Configured and Running ({{ ansible_date_time.date }})</div>'
          when: index_exists.stat.exists and has_ftp_badge is defined and has_ftp_badge
      when: index_exists.stat.exists and proftpd_service.failed is not defined
      ignore_errors: yes
      tags:
        - index

    # Fase 11: Resumen y recomendaciones
    - name: Mensaje de diagnóstico y recomendaciones
      debug:
        msg: |
          Instalación de ProFTPD completada:
          - Host: {{ target_host }}
          - Estado del servicio: {{ 'Activo' if proftpd_service.failed is not defined else 'Inactivo' }}
          - Directorio FTP: {{ server_root }}/{{ target_host }}
          - Usuario FTP: {{ ftp_user }}
          - Puerto: {{ ftp_port }}
          - Rango de puertos pasivos: {{ pasv_min_port }}-{{ pasv_max_port }}
          
          Para probar la conexión FTP:
          - Servidor: {{ target_host }}
          - Puerto: {{ ftp_port }}
          - Usuario: {{ ftp_user }}
          - Contraseña: {{ ftp_password }}
          - Modo: FTP con SSL opcional (FTPES)
          
          Ventajas de ProFTPD frente a VSFTPD:
          1. Configuración más flexible y potente
          2. Mejor soporte para entornos virtuales
          3. Mejor gestión de usuarios y permisos
          4. Configuración SSL más robusta
          5. Mayor estabilidad en entornos de producción
      tags:
        - always
