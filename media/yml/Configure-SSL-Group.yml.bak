---
- name: Configurar HTTPS con mod_ssl para grupo
  hosts: "{{ target_group }}"
  become: yes
  vars:
    https_port: 443
    server_root: /var/www/html
    log_root: /var/log/httpd
    domain: upb.edu.co
    subdomain: "{{ target_group }}"

  tasks:
    - name: Verificar si el modulo ssl ya esta habilitado
      shell: httpd -M | grep ssl
      register: ssl_loaded
      ignore_errors: yes
      changed_when: false
      tags:
        - ssl

    - name: Instalar mod_ssl si no esta instalado
      package:
        name: mod_ssl
        state: present
      when: ssl_loaded is failed
      tags:
        - ssl

    - name: Verificar si mod_rewrite está habilitado
      shell: httpd -M | grep rewrite || echo "not loaded"
      register: rewrite_loaded
      ignore_errors: yes
      changed_when: false
      tags:
        - ssl

    - name: Habilitar mod_rewrite si no está cargado
      shell: a2enmod rewrite || echo "mod_rewrite no se pudo habilitar con a2enmod, podría requerir instalación manual"
      when: "'not loaded' in rewrite_loaded.stdout"
      ignore_errors: yes
      tags:
        - ssl

    - name: Crear directorio para certificados
      file:
        path: /etc/ssl/httpd
        state: directory
        mode: '0755'
      tags:
        - ssl

    - name: Verificar si el enlace simbolico ssl.conf existe
      stat:
        path: /etc/httpd/conf.d/ssl.conf
      register: ssl_link_stat
      tags:
         - ssl

    - name: Crear enlace simbolico al modulo SSL (Red Hat)
      file:
        src: /etc/httpd/conf.modules.d/00-ssl.conf
        dest: /etc/httpd/conf.d/ssl.conf
        state: link
      when: ssl_link_stat.stat.exists == false
      tags:
        - ssl

    - name: Copiar certificado SSL al servidor
      copy:
        src: /opt/www/media/templates/ssl/certificado.crt
        dest: /etc/ssl/httpd/{{ target_group }}.certificado.crt
        mode: '0644'
      tags:
        - ssl

    - name: Copiar clave privada SSL al servidor
      copy:
        src: /opt/www/media/templates/ssl/certificado.key
        dest: /etc/ssl/httpd/{{ target_group }}.certificado.key
        mode: '0600'
      tags:
        - ssl

    - name: Eliminar configuración SSL anterior si existe
      file:
        path: /etc/httpd/conf.d/{{ target_group }}-ssl.conf
        state: absent
      tags:
        - ssl

    - name: Eliminar configuración de redirección anterior si existe
      file:
        path: /etc/httpd/conf.d/{{ target_group }}-redirect.conf
        state: absent
      tags:
        - ssl

    - name: Crear directorio de logs si no existe
      file:
        path: "{{ log_root }}/{{ target_group }}"
        state: directory
        mode: '0755'
      tags:
        - ssl

    - name: Configurar VirtualHost para HTTPS
      template:
        src: /opt/www/media/templates/group/virtualhost-ssl.conf.j2
        dest: /etc/httpd/conf.d/{{ target_group }}-ssl.conf
        mode: '0644'
      tags:
        - ssl

    - name: Configurar redirección HTTP a HTTPS
      template:
        src: /opt/www/media/templates/group/virtualhost-redirect.conf.j2
        dest: /etc/httpd/conf.d/{{ target_group }}-redirect.conf
        mode: '0644'
      tags:
        - ssl

    - name: Verificar configuración de Apache
      command: httpd -t
      register: apache_config_test
      changed_when: false
      ignore_errors: yes
      tags:
        - ssl

    - name: Reiniciar Apache si la configuración es válida
      service:
        name: httpd
        state: restarted
      when: apache_config_test.rc == 0
      tags:
        - ssl

    - name: Mostrar error de configuración si existe
      debug:
        msg: "Error en la configuración de Apache: {{ apache_config_test.stderr }}"
      when: apache_config_test.rc != 0
      tags:
        - ssl

    - name: Verificar si firewalld está instalado
      command: systemctl status firewalld
      register: firewalld_status
      ignore_errors: yes
      changed_when: false
      tags:
        - firewall

    - name: Abrir puerto 443 en el firewall (firewalld)
      shell: firewall-cmd --permanent --add-port={{ https_port }}/tcp
      when: firewalld_status.rc == 0
      tags:
        - firewall

    - name: Recargar firewall (firewalld)
      shell: firewall-cmd --reload
      when: firewalld_status.rc == 0
      tags:
        - firewall

    - name: Verificar si iptables está instalado
      command: which iptables
      register: iptables_status
      ignore_errors: yes
      changed_when: false
      when: firewalld_status.rc != 0
      tags:
        - firewall

    - name: Abrir puerto 443 en el firewall (iptables)
      shell: iptables -I INPUT -p tcp --dport {{ https_port }} -j ACCEPT
      when: 
        - firewalld_status.rc != 0
        - iptables_status.rc == 0
      tags:
        - firewall

    - name: Guardar reglas de iptables
      shell: service iptables save
      when: 
        - firewalld_status.rc != 0
        - iptables_status.rc == 0
      tags:
        - firewall

    - name: Mensaje de confirmacion
      debug:
        msg: "HTTPS Enabled: {{ https_port }}"
      tags:
        - ssl
