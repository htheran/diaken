---
- name: Instalación y configuración de Apache HTTP Server para grupos
  hosts: target_group
  become: yes
  tasks:
    # Fase 0: Validación de variables
    - name: Validar variables requeridas
      debug:
        msg: "Validando variables para el grupo: {{ target_group }}"
      tags:
        - always

    - name: Verificar si existen variables de configuración
      debug:
        msg: "Variables de configuración disponibles: {{ vars | to_json }}"
      tags:
        - debug
        - never

    - name: Establecer variables por defecto si no están definidas
      set_fact:
        server_root: "{{ server_root | default('/opt/www/sites') }}"
        log_root: "{{ log_root | default('/var/log/httpd') }}"
        http_port: "{{ http_port | default(80) }}"
        https_port: "{{ https_port | default(443) }}"
        domain: "{{ domain | default('upb.edu.co') }}"
      tags:
        - always

    # Fase 1: Diagnóstico y limpieza inicial
    - name: Verificar si Apache está instalado
      command: which httpd
      register: httpd_installed
      ignore_errors: yes
      changed_when: false
      tags:
        - diagnose

    - name: Verificar errores de sintaxis en la configuración
      shell: httpd -t
      register: apache_syntax
      ignore_errors: yes
      changed_when: false
      when: httpd_installed.rc == 0
      tags:
        - diagnose

    - name: Mostrar errores de sintaxis si existen
      debug:
        msg: "{{ apache_syntax.stderr_lines | default(['Apache no está instalado o no se pudo verificar la configuración']) }}"
      when: httpd_installed.rc != 0 or (apache_syntax is defined and apache_syntax.rc != 0)
      tags:
        - diagnose

    - name: Eliminar configuraciones SSL problemáticas
      shell: |
        find /etc/httpd/conf.d/ -name "*-ssl.conf" -o -name "*-redirect.conf" -o -name "ssl.conf" | xargs rm -f 2>/dev/null || true
        rm -f /etc/httpd/conf.d/BACKEND-ssl.conf
        rm -f /etc/httpd/conf.d/ssl.conf
        rm -f /etc/httpd/conf.d/{{ target_group }}-ssl.conf
        rm -f /etc/httpd/conf.d/{{ target_group }}-redirect.conf
        rm -f /etc/httpd/conf.d/{{ inventory_hostname }}-ssl.conf
        rm -f /etc/httpd/conf.d/{{ inventory_hostname }}-redirect.conf
      ignore_errors: yes
      tags:
        - cleanup

    # Fase 2: Actualización e instalación
    - name: Actualizar sistema operativo
      dnf:
        name: '*'
        state: latest
        update_cache: yes
      register: result_update
      ignore_errors: yes
      tags:
        - install

    - name: Debug result_update
      debug:
        var: result_update
      tags:
        - install

    - name: Instalar Apache (httpd)
      dnf:
        name: httpd
        state: present
      tags:
        - install

    # Fase 3: Configuración de firewall
    - name: Asegurar que el servicio firewalld esté iniciado y habilitado
      service:
        name: firewalld
        state: started
        enabled: yes
      ignore_errors: yes
      tags:
        - firewall

    - name: Abrir puerto HTTP permanentemente en el firewall
      shell: firewall-cmd --permanent --add-port={{ http_port }}/tcp
      ignore_errors: yes
      tags:
        - firewall

    - name: Abrir puerto HTTPS permanentemente en el firewall
      shell: firewall-cmd --permanent --add-port={{ https_port }}/tcp
      ignore_errors: yes
      tags:
        - firewall

    - name: Recargar firewalld
      shell: firewall-cmd --reload
      ignore_errors: yes
      tags:
        - firewall

    # Fase 4: Configuración de SELinux
    - name: Deshabilitar SELinux (temporalmente)
      command: setenforce 0
      ignore_errors: yes
      tags:
        - selinux

    - name: Deshabilitar SELinux permanentemente
      replace:
        path: /etc/selinux/config
        regexp: '^SELINUX=enforcing'
        replace: 'SELINUX=disabled'
      ignore_errors: yes
      tags:
        - selinux

    # Fase 5: Crear directorios necesarios
    - name: Crear directorios necesarios para el grupo
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ server_root }}/{{ target_group }}"
        - "{{ log_root }}/{{ target_group }}"
      tags:
        - configure

    - name: Crear directorios necesarios para cada host
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ server_root }}/{{ inventory_hostname }}"
        - "{{ log_root }}/{{ inventory_hostname }}"
        - "/etc/httpd/conf.d"
      tags:
        - configure

    # Fase 6: Configurar Apache
    - name: Hacer backup del archivo httpd.conf si existe
      copy:
        src: /etc/httpd/conf/httpd.conf
        dest: /etc/httpd/conf/httpd.conf.bak
        remote_src: yes
      ignore_errors: yes
      tags:
        - configure

    - name: Copiar el archivo httpd.conf desde la plantilla
      template:
        src: "/opt/www/media/templates/group/httpd.conf.j2"
        dest: /etc/httpd/conf/httpd.conf
        mode: '0644'
      tags:
        - configure

    - name: Limpiar archivo /etc/hostname
      copy:
        content: ""
        dest: /etc/hostname
        force: yes
      tags:
        - configure

    - name: Guardar nombre en /etc/hostname
      copy:
        content: "{{ inventory_hostname }}"
        dest: /etc/hostname
        force: yes
      tags:
        - configure

    - name: Copiar archivo index.html desde la plantilla para el grupo
      template:
        src: "/opt/www/media/templates/group/index.html.j2"
        dest: "{{ server_root }}/{{ target_group }}/index.html"
        mode: '0644'
      tags:
        - configure

    - name: Copiar archivo index.html desde la plantilla para el host
      template:
        src: "/opt/www/media/templates/group/index.html.j2"
        dest: "{{ server_root }}/{{ inventory_hostname }}/index.html"
        mode: '0644'
      tags:
        - configure

    - name: Copiar configuración de VirtualHost para Apache (grupo)
      template:
        src: "/opt/www/media/templates/group/virtualhost.conf.j2"
        dest: "/etc/httpd/conf.d/{{ target_group }}.conf"
        mode: '0644'
      tags:
        - configure

    - name: Copiar configuración de VirtualHost para Apache (host)
      template:
        src: "/opt/www/media/templates/group/virtualhost.conf.j2"
        dest: "/etc/httpd/conf.d/{{ inventory_hostname }}.conf"
        mode: '0644'
      vars:
        target_group: "{{ inventory_hostname }}"
      tags:
        - configure

    # Fase 7: Verificar y reiniciar Apache
    - name: Verificar configuración de Apache
      command: httpd -t
      register: apache_config_test
      ignore_errors: yes
      changed_when: false
      tags:
        - service

    - name: Mostrar errores de configuración si existen
      debug:
        msg: "{{ apache_config_test.stderr_lines }}"
      when: apache_config_test.rc != 0
      tags:
        - service

    - name: Reiniciar Apache si la configuración es válida
      service:
        name: httpd
        state: restarted
        enabled: yes
      when: apache_config_test.rc == 0
      tags:
        - service

    - name: Mostrar advertencia si la configuración no es válida
      debug:
        msg: "ADVERTENCIA: La configuración de Apache tiene errores y no se pudo reiniciar el servicio."
      when: apache_config_test.rc != 0
      tags:
        - service
