---
- name: Reinstalación completa de VSFTPD
  hosts: target_host
  become: yes
  tasks:
    # Fase 0: Validación de variables
    - name: Validar variables requeridas
      debug:
        msg: "Validando variables para el host: {{ target_host }}"
      tags:
        - always

    - name: Establecer variables por defecto si no están definidas
      set_fact:
        server_root: "{{ server_root | default('/opt/www/sites') }}"
        ftp_user: "{{ ftp_user | default('ftpuser') }}"
        ftp_password: "{{ ftp_password | default('changeme') }}"
        ftp_port: "{{ ftp_port | default(21) }}"
        pasv_min_port: "{{ pasv_min_port | default(30000) }}"
        pasv_max_port: "{{ pasv_max_port | default(31000) }}"
        apache_group: "{{ apache_group | default('apache') }}"
      tags:
        - always

    # Fase 1: Limpieza completa
    - name: Detener servicio VSFTPD si existe
      service:
        name: vsftpd
        state: stopped
      ignore_errors: yes
      tags:
        - cleanup

    - name: Eliminar paquete VSFTPD
      package:
        name: vsftpd
        state: absent
      tags:
        - cleanup

    - name: Eliminar directorios de configuración
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/vsftpd
        - /etc/pam.d/vsftpd
      tags:
        - cleanup

    - name: Eliminar archivos de log
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/log/vsftpd.log
        - /var/log/xferlog
      tags:
        - cleanup

    # Fase 2: Instalación limpia
    - name: Instalar VSFTPD
      package:
        name: vsftpd
        state: present
      tags:
        - install

    - name: Verificar instalación de VSFTPD
      command: which vsftpd
      register: vsftpd_check
      failed_when: vsftpd_check.rc != 0
      changed_when: false
      tags:
        - install

    # Fase 3: Configuración básica
    - name: Crear directorio de configuración si no existe
      file:
        path: /etc/vsftpd
        state: directory
        mode: '0755'
      tags:
        - configure

    - name: Crear configuración básica de VSFTPD
      copy:
        content: |
          # Configuración básica de VSFTPD generada por Reinstall-VSFTPD-Complete.yml
          # Configuración general
          listen=YES
          listen_port={{ ftp_port }}
          connect_from_port_20=YES
          
          # Configuración de usuarios
          anonymous_enable=NO
          local_enable=YES
          write_enable=YES
          local_umask=022
          
          # Configuración de directorios
          chroot_local_user=YES
          allow_writeable_chroot=YES
          user_sub_token=$USER
          local_root={{ server_root }}/$USER
          
          # Configuración de logs
          xferlog_enable=YES
          xferlog_std_format=YES
          xferlog_file=/var/log/xferlog
          log_ftp_protocol=YES
          vsftpd_log_file=/var/log/vsftpd.log
          
          # Configuración de mensajes
          dirmessage_enable=YES
          ftpd_banner=Bienvenido al servidor FTP de {{ target_host }}
          
          # Configuración de tiempos
          idle_session_timeout=600
          data_connection_timeout=120
          
          # Configuración de seguridad
          hide_ids=YES
          
          # Configuración de SSL - Desactivado inicialmente
          ssl_enable=NO
          
          # Configuración de modo pasivo
          pasv_enable=YES
          pasv_min_port={{ pasv_min_port }}
          pasv_max_port={{ pasv_max_port }}
          
          # Configuración de usuarios permitidos
          userlist_enable=YES
          userlist_file=/etc/vsftpd/vsftpd.users
          userlist_deny=NO
          
          # Configuración de PAM
          pam_service_name=vsftpd
        dest: /etc/vsftpd/vsftpd.conf
        mode: '0600'
      tags:
        - configure

    # Fase 4: Configuración de usuarios
    - name: Verificar si el usuario FTP existe
      getent:
        database: passwd
        key: "{{ ftp_user }}"
      register: ftp_user_exists
      ignore_errors: yes
      tags:
        - users

    - name: Crear usuario FTP si no existe
      user:
        name: "{{ ftp_user }}"
        password: "{{ ftp_password | password_hash('sha512') }}"
        groups: "{{ apache_group }}"
        append: yes
        shell: /sbin/nologin
        home: "{{ server_root }}/{{ target_host }}"
        create_home: no
      when: ftp_user_exists.failed is defined and ftp_user_exists.failed
      tags:
        - users

    - name: Crear archivo de usuarios permitidos
      copy:
        content: "{{ ftp_user }}"
        dest: /etc/vsftpd/vsftpd.users
        mode: '0600'
      tags:
        - users

    # Fase 5: Configuración de directorios
    - name: Verificar directorio del usuario FTP
      stat:
        path: "{{ server_root }}/{{ target_host }}"
      register: ftp_dir_stat
      tags:
        - directories

    - name: Crear directorio para el usuario FTP si no existe
      file:
        path: "{{ server_root }}/{{ target_host }}"
        state: directory
        owner: "{{ ftp_user }}"
        group: "{{ apache_group }}"
        mode: '0755'
      when: not ftp_dir_stat.stat.exists
      tags:
        - directories

    - name: Establecer permisos correctos en el directorio
      shell: |
        chown -R {{ ftp_user }}:{{ apache_group }} {{ server_root }}/{{ target_host }}
        chmod -R 755 {{ server_root }}/{{ target_host }}
        find {{ server_root }}/{{ target_host }} -type f -exec chmod 644 {} \;
      ignore_errors: yes
      tags:
        - directories

    # Fase 6: Configuración de firewall
    - name: Verificar si firewalld está instalado
      command: which firewall-cmd
      register: firewalld_check
      ignore_errors: yes
      changed_when: false
      tags:
        - firewall

    - name: Permitir servicio FTP en firewall
      firewalld:
        service: ftp
        permanent: yes
        state: enabled
      when: firewalld_check.rc == 0
      ignore_errors: yes
      tags:
        - firewall

    - name: Permitir puertos pasivos en firewall
      firewalld:
        port: "{{ pasv_min_port }}-{{ pasv_max_port }}/tcp"
        permanent: yes
        state: enabled
      when: firewalld_check.rc == 0
      ignore_errors: yes
      tags:
        - firewall

    - name: Recargar firewall
      command: firewall-cmd --reload
      when: firewalld_check.rc == 0
      ignore_errors: yes
      changed_when: true
      tags:
        - firewall

    # Fase 7: Iniciar servicio
    - name: Habilitar e iniciar servicio VSFTPD
      service:
        name: vsftpd
        state: started
        enabled: yes
      register: vsftpd_service
      tags:
        - service

    # Fase 8: Verificación
    - name: Verificar estado del servicio
      command: systemctl status vsftpd
      register: vsftpd_status
      ignore_errors: yes
      changed_when: false
      tags:
        - verify

    - name: Mostrar estado del servicio
      debug:
        msg: "{{ vsftpd_status.stdout_lines }}"
      tags:
        - verify

    # Fase 9: Actualizar index.html
    - name: Verificar si existe index.html
      stat:
        path: "{{ server_root }}/{{ target_host }}/index.html"
      register: index_exists
      tags:
        - index

    - name: Actualizar index.html con estado de FTP
      block:
        - name: Leer contenido actual de index.html
          slurp:
            src: "{{ server_root }}/{{ target_host }}/index.html"
          register: index_content
          when: index_exists.stat.exists
          
        - name: Decodificar contenido
          set_fact:
            decoded_content: "{{ index_content['content'] | b64decode }}"
          when: index_exists.stat.exists
          
        - name: Verificar si ya existe badge de FTP
          set_fact:
            has_ftp_badge: "{{ decoded_content | regex_search('FTP Status') != None }}"
          when: index_exists.stat.exists
          
        - name: Añadir badge de FTP si no existe
          replace:
            path: "{{ server_root }}/{{ target_host }}/index.html"
            regexp: '(<div class="container mt-5">.*?<h1>)'
            replace: '\1<div class="alert alert-success mb-4"><strong>FTP Status:</strong> Configured and Running ({{ ansible_date_time.date }})</div>'
          when: index_exists.stat.exists and (has_ftp_badge is not defined or not has_ftp_badge)
          
        - name: Actualizar badge de FTP si ya existe
          replace:
            path: "{{ server_root }}/{{ target_host }}/index.html"
            regexp: '<div class="alert alert-(success|warning|danger) mb-4"><strong>FTP Status:</strong>.*?</div>'
            replace: '<div class="alert alert-success mb-4"><strong>FTP Status:</strong> Configured and Running ({{ ansible_date_time.date }})</div>'
          when: index_exists.stat.exists and has_ftp_badge is defined and has_ftp_badge
      when: index_exists.stat.exists and vsftpd_service.failed is not defined
      ignore_errors: yes
      tags:
        - index

    # Fase 10: Resumen y recomendaciones
    - name: Mensaje de diagnóstico y recomendaciones
      debug:
        msg: |
          Reinstalación completa de VSFTPD finalizada:
          - Host: {{ target_host }}
          - Estado del servicio: {{ 'Activo' if vsftpd_service.failed is not defined else 'Inactivo' }}
          - Directorio FTP: {{ server_root }}/{{ target_host }}
          - Usuario FTP: {{ ftp_user }}
          - Puerto: {{ ftp_port }}
          - Rango de puertos pasivos: {{ pasv_min_port }}-{{ pasv_max_port }}
          
          Para probar la conexión FTP:
          - Servidor: {{ target_host }}
          - Puerto: {{ ftp_port }}
          - Usuario: {{ ftp_user }}
          - Contraseña: {{ ftp_password }}
          - Modo: FTP sin SSL (Explícito)
          
          Para habilitar SSL después:
          1. Genere un certificado SSL:
             openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/vsftpd/vsftpd.pem -out /etc/vsftpd/vsftpd.pem
          2. Edite el archivo /etc/vsftpd/vsftpd.conf
          3. Cambie ssl_enable=NO a ssl_enable=YES
          4. Añada las líneas:
             rsa_cert_file=/etc/vsftpd/vsftpd.pem
             rsa_private_key_file=/etc/vsftpd/vsftpd.pem
          5. Reinicie el servicio: systemctl restart vsftpd
      tags:
        - always
