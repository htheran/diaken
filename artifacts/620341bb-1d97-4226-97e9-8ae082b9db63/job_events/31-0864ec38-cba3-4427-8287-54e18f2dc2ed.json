{"uuid": "0864ec38-cba3-4427-8287-54e18f2dc2ed", "counter": 31, "stdout": "\u001b[0;31mfatal: [demo03]: FAILED! => {\"msg\": \"template error while templating string: Encountered unknown tag 'break'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: \\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 RESUMEN DEL SISTEMA \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\\n\u2551 HOST: {{ '%-50s' | format(ansible_hostname) }}\u2551\\n\u2551 SISTEMA: {{ '%-46s' | format(ansible_distribution + ' ' + ansible_distribution_version) }}\u2551\\n\u2551 UPTIME: {{ '%-47.1f' | format(ansible_uptime_seconds | int / 3600) }} horas \u2551\\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\\n\\n\ud83d\udd10 AUTENTICACI\u00d3N\\n{% set auth_attempts = auth_summary | from_json %}\\n{% if auth_attempts | length > 0 %}\\n\u274c INTENTOS FALLIDOS ({{ auth_attempts | length }}):\\n{% for attempt in auth_attempts %}\\n\u2022 {{ attempt.time }} - Usuario: {{ attempt.user }}\\n{% endfor %}\\n{% else %}\\n\u2705 No se detectaron intentos de autenticaci\u00f3n fallidos\\n{% endif %}\\n\\n\u26a0\ufe0f  ERRORES RECIENTES\\n{% set errors = errors_summary | from_json %}\\n{% if errors | length > 0 %}\\n{% for error_key, error_data in errors.items() | sort(attribute='1.count', reverse=true) %}\\n{% if error_data.count > 1 %}\\n\u2022 ({{ error_data.count }}x) {{ error_data.example | regex_replace('0x[0-9a-fA-F]+', '0xXXXX') | regex_replace('\\\\\\\\d+', 'N') }}\\n{% else %}\\n\u2022 {{ error_data.example | regex_replace('\\\\\\\\s+', ' ') | trim }}\\n{% endif %}\\n{% if loop.index >= 5 %}\\n\u2022 ... y {{ errors | length - 5 }} errores m\u00e1s\\n{% break %}\\n{% endif %}\\n{% endfor %}\\n{% else %}\\n\u2705 No se encontraron errores cr\u00edticos\\n{% endif %}\\n\\n\ud83d\udcca RECURSOS DEL SISTEMA\\n\u2022 Memoria: {{ '%-4.1f' | format(100 - ansible_memory_mb.real.free / ansible_memory_mb.real.total * 100) }}% usado ({{ (ansible_memory_mb.real.used / 1024) | round(1) }}/{{ (ansible_memory_mb.real.total / 1024) | round(1) }} GB)\\n\\n{% set disk_mounts = [] %}\\n{% for mount in ansible_mounts | sort(attribute='mount') %}\\n{% if mount.size_available is defined and mount.size is defined and mount.size > 0 %}\\n{% set _ = disk_mounts.append(mount) %}\\n{% endif %}\\n{% endfor %}\\n\\n{% if disk_mounts | length > 0 %}\\n\u2022 Almacenamiento:\\n{% for mount in disk_mounts %}\\n  - {{ '%-15s' | format(mount.mount) }} {{ '%5.1f' | format(100 - mount.size_available / mount.size * 100) }}% usado ({{ '%-5.1f' | format(mount.size_available / 1073741824) }} GB libres de {{ '%-5.1f' | format(mount.size / 1073741824) }} GB)\\n{% endfor %}\\n{% endif %}\\n\\n\ud83d\udd0d Para ver detalles completos, ejecuta con -v\\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550. Encountered unknown tag 'break'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.\"}\u001b[0m", "start_line": 29, "end_line": 30, "runner_ident": "620341bb-1d97-4226-97e9-8ae082b9db63", "event": "runner_on_failed", "pid": 170379, "created": "2025-05-17T11:45:42.619278+00:00", "parent_uuid": "005056b7-f67d-e21e-8685-000000000006", "event_data": {"playbook": "/tmp/tmp3tw33ee8.yml", "playbook_uuid": "5afcdec1-f131-41b6-bd34-8113e694e719", "play": "Revisar logs del sistema y autenticaci\u00f3n", "play_uuid": "005056b7-f67d-e21e-8685-000000000002", "play_pattern": "demo03", "task": "Mostrar resumen ejecutivo", "task_uuid": "005056b7-f67d-e21e-8685-000000000006", "task_action": "debug", "resolved_action": "ansible.builtin.debug", "task_args": "", "task_path": "/tmp/tmp3tw33ee8.yml:89", "host": "demo03", "remote_addr": "demo03", "res": {"msg": "template error while templating string: Encountered unknown tag 'break'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.. String: \n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 RESUMEN DEL SISTEMA \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 HOST: {{ '%-50s' | format(ansible_hostname) }}\u2551\n\u2551 SISTEMA: {{ '%-46s' | format(ansible_distribution + ' ' + ansible_distribution_version) }}\u2551\n\u2551 UPTIME: {{ '%-47.1f' | format(ansible_uptime_seconds | int / 3600) }} horas \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n\n\ud83d\udd10 AUTENTICACI\u00d3N\n{% set auth_attempts = auth_summary | from_json %}\n{% if auth_attempts | length > 0 %}\n\u274c INTENTOS FALLIDOS ({{ auth_attempts | length }}):\n{% for attempt in auth_attempts %}\n\u2022 {{ attempt.time }} - Usuario: {{ attempt.user }}\n{% endfor %}\n{% else %}\n\u2705 No se detectaron intentos de autenticaci\u00f3n fallidos\n{% endif %}\n\n\u26a0\ufe0f  ERRORES RECIENTES\n{% set errors = errors_summary | from_json %}\n{% if errors | length > 0 %}\n{% for error_key, error_data in errors.items() | sort(attribute='1.count', reverse=true) %}\n{% if error_data.count > 1 %}\n\u2022 ({{ error_data.count }}x) {{ error_data.example | regex_replace('0x[0-9a-fA-F]+', '0xXXXX') | regex_replace('\\\\d+', 'N') }}\n{% else %}\n\u2022 {{ error_data.example | regex_replace('\\\\s+', ' ') | trim }}\n{% endif %}\n{% if loop.index >= 5 %}\n\u2022 ... y {{ errors | length - 5 }} errores m\u00e1s\n{% break %}\n{% endif %}\n{% endfor %}\n{% else %}\n\u2705 No se encontraron errores cr\u00edticos\n{% endif %}\n\n\ud83d\udcca RECURSOS DEL SISTEMA\n\u2022 Memoria: {{ '%-4.1f' | format(100 - ansible_memory_mb.real.free / ansible_memory_mb.real.total * 100) }}% usado ({{ (ansible_memory_mb.real.used / 1024) | round(1) }}/{{ (ansible_memory_mb.real.total / 1024) | round(1) }} GB)\n\n{% set disk_mounts = [] %}\n{% for mount in ansible_mounts | sort(attribute='mount') %}\n{% if mount.size_available is defined and mount.size is defined and mount.size > 0 %}\n{% set _ = disk_mounts.append(mount) %}\n{% endif %}\n{% endfor %}\n\n{% if disk_mounts | length > 0 %}\n\u2022 Almacenamiento:\n{% for mount in disk_mounts %}\n  - {{ '%-15s' | format(mount.mount) }} {{ '%5.1f' | format(100 - mount.size_available / mount.size * 100) }}% usado ({{ '%-5.1f' | format(mount.size_available / 1073741824) }} GB libres de {{ '%-5.1f' | format(mount.size / 1073741824) }} GB)\n{% endfor %}\n{% endif %}\n\n\ud83d\udd0d Para ver detalles completos, ejecuta con -v\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550. Encountered unknown tag 'break'. Jinja was looking for the following tags: 'elif' or 'else' or 'endif'. The innermost block that needs to be closed is 'if'.", "_ansible_no_log": false}, "start": "2025-05-17T11:45:42.587529+00:00", "end": "2025-05-17T11:45:42.618948+00:00", "duration": 0.031419, "ignore_errors": null, "event_loop": null, "uuid": "0864ec38-cba3-4427-8287-54e18f2dc2ed"}}